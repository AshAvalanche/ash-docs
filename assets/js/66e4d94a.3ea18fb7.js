"use strict";(self.webpackChunkash_docs=self.webpackChunkash_docs||[]).push([[9784],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>d});var n=a(7294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},h="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),h=p(a),m=l,d=h["".concat(s,".").concat(m)]||h[m]||u[m]||o;return a?n.createElement(d,r(r({ref:t},c),{},{components:a})):n.createElement(d,r({ref:t},c))}));function d(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var o=a.length,r=new Array(o);r[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[h]="string"==typeof e?e:l,r[1]=i;for(var p=2;p<o;p++)r[p]=a[p];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},5769:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var n=a(7462),l=(a(7294),a(3905));const o={sidebar_position:1},r="Local Test Network Creation",i={unversionedId:"toolkit/ansible-avalanche-collection/tutorials/local-test-network",id:"toolkit/ansible-avalanche-collection/tutorials/local-test-network",title:"Local Test Network Creation",description:"In this section, we will learn how to use the ash.avalanche Ansible collection to provision a local Avalanche test network on Multipass virtual machines.",source:"@site/docs/toolkit/ansible-avalanche-collection/tutorials/local-test-network.md",sourceDirName:"toolkit/ansible-avalanche-collection/tutorials",slug:"/toolkit/ansible-avalanche-collection/tutorials/local-test-network",permalink:"/docs/toolkit/ansible-avalanche-collection/tutorials/local-test-network",draft:!1,editUrl:"https://github.com/AshAvalanche/ash-docs/tree/main/docs/toolkit/ansible-avalanche-collection/tutorials/local-test-network.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"toolkitSidebar",previous:{title:"Tutorials",permalink:"/docs/category/tutorials"},next:{title:"Create a Fuji node on AWS",permalink:"/docs/toolkit/ansible-avalanche-collection/tutorials/fuji-node-aws"}},s={},p=[{value:"Requirements",id:"requirements",level:2},{value:"Setup the environment",id:"setup-the-environment",level:2},{value:"Bootstrap the local test network",id:"bootstrap-the-local-test-network",level:2},{value:"Issue API calls",id:"issue-api-calls",level:2},{value:"Use the Ash CLI",id:"use-the-ash-cli",level:2},{value:"Use the Ash CLI installed in the VMs",id:"use-the-ash-cli-installed-in-the-vms",level:3},{value:"Use the Ash CLI installed locally",id:"use-the-ash-cli-installed-locally",level:3},{value:"Pre-funded account",id:"pre-funded-account",level:2},{value:"Customize the installation",id:"customize-the-installation",level:2},{value:"Use Multipass to manage the VMs",id:"use-multipass-to-manage-the-vms",level:2},{value:"List the VMs",id:"list-the-vms",level:3},{value:"Stop/restart the VMs",id:"stoprestart-the-vms",level:3},{value:"Teardown the local test network",id:"teardown-the-local-test-network",level:2}],c={toc:p},h="wrapper";function u(e){let{components:t,...a}=e;return(0,l.kt)(h,(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"local-test-network-creation"},"Local Test Network Creation"),(0,l.kt)("p",null,"In this section, we will learn how to use the ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/AshAvalanche/ansible-avalanche-collection"},"ash.avalanche")," Ansible collection to provision a local ",(0,l.kt)("a",{parentName:"p",href:"https://docs.avax.network/"},"Avalanche")," test network on ",(0,l.kt)("a",{parentName:"p",href:"https://multipass.run"},"Multipass")," virtual machines."),(0,l.kt)("h2",{id:"requirements"},"Requirements"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Python >=3.9 with ",(0,l.kt)("inlineCode",{parentName:"li"},"venv")," module installed"),(0,l.kt)("li",{parentName:"ul"},"For the local test network:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"7+GiB of free RAM"),(0,l.kt)("li",{parentName:"ul"},"Multipass installed (see ",(0,l.kt)("a",{parentName:"li",href:"https://multipass.run/install"},"Install Multipass"),")",(0,l.kt)("admonition",{parentName:"li",type:"info"},(0,l.kt)("p",{parentName:"admonition"},(0,l.kt)("a",{parentName:"p",href:"https://multipass.run"},"Multipass")," is a tool to generate cloud-style Ubuntu VMs quickly on Linux, macOS, and Windows"))),(0,l.kt)("li",{parentName:"ul"},"Terraform installed (see ",(0,l.kt)("a",{parentName:"li",href:"https://developer.hashicorp.com/terraform/tutorials/aws-get-started/install-cli"},"Install Terraform"),")",(0,l.kt)("admonition",{parentName:"li",type:"info"},(0,l.kt)("p",{parentName:"admonition"},(0,l.kt)("a",{parentName:"p",href:"https://terraform.io"},"Terraform")," is an infrastructure as code tool that lets you build, change, and version infrastructure safely and efficiently"))))),(0,l.kt)("li",{parentName:"ul"},"For filtering outputs:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://stedolan.github.io/jq/"},"jq")," (see ",(0,l.kt)("a",{parentName:"li",href:"https://stedolan.github.io/jq/download/"},"Download jq"),")")))),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"We recommend installing the Ash CLI to easily get information about your nodes and Subnets. See ",(0,l.kt)("a",{parentName:"p",href:"/docs/toolkit/ash-cli/installation"},"Ash CLI - Installation"),".",(0,l.kt)("br",{parentName:"p"}),"\n","The tutorials still provide the snippets to query the Avalanche APIs with cURL.")),(0,l.kt)("h2",{id:"setup-the-environment"},"Setup the environment"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Clone the Getting Started repository:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/AshAvalanche/ansible-avalanche-getting-started\ncd ansible-avalanche-getting-started\n"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Setup and activate Python venv:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"bin/setup.sh\nsource .venv/bin/activate\n"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Install the ",(0,l.kt)("inlineCode",{parentName:"p"},"ash.avalanche")," collection:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"ansible-galaxy collection install git+https://github.com/AshAvalanche/ansible-avalanche-collection.git\n"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Initialize the Terraform modules:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"terraform -chdir=terraform/multipass init\n")))),(0,l.kt)("h2",{id:"bootstrap-the-local-test-network"},"Bootstrap the local test network"),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"This section uses the ",(0,l.kt)("inlineCode",{parentName:"p"},"local")," inventory which is pre-configured as a local Avalanche network (see ",(0,l.kt)("inlineCode",{parentName:"p"},"avalanchego_network_id: local")," in ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/AshAvalanche/ansible-avalanche-getting-started/tree/main/inventories/local/group_vars/avalanche_nodes.yml#L5"},"avalanche_nodes.yml"),").")),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Create the virtual machines that will host the validator nodes using Terraform (enter ",(0,l.kt)("inlineCode",{parentName:"p"},"yes")," when prompted):"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"terraform -chdir=terraform/multipass apply\n")))),(0,l.kt)("p",null,"We will use the ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/AshAvalanche/ansible-avalanche-collection/blob/main/playbooks/bootstrap_local_network.yml"},"ash.avalanche.bootstrap_local_network")," playbook to bootstrap the local network. This playbook starts a first validator (",(0,l.kt)("inlineCode",{parentName:"p"},"validator01"),") and then boostrap additional nodes (",(0,l.kt)("inlineCode",{parentName:"p"},"validator02-05"),") from the first node, thus creating a local network."),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Bootstrap the Avalanche nodes:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"ansible-playbook ash.avalanche.bootstrap_local_network -i inventories/local\n")))),(0,l.kt)("p",null,"It's done! We now have a ready-to-use 5-nodes Avalanche local test network."),(0,l.kt)("h2",{id:"issue-api-calls"},"Issue API calls"),(0,l.kt)("p",null,"The validator nodes expose AvalancheGo APIs on their local and public interfaces. Because the public IP address is not known in advance, it is easier to leverage ",(0,l.kt)("inlineCode",{parentName:"p"},"multipass exec")," to query the ",(0,l.kt)("a",{parentName:"p",href:"https://docs.avax.network/build/avalanchego-apis/"},"Avalanche APIs")," on the local interface. For example, to check if the P-Chain is done bootstrapping:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Command"',title:'"Command"'},'multipass exec validator01 -- curl -X POST --data \'{\n  "jsonrpc": "2.0",\n  "id"     : 1,\n  "method" : "info.isBootstrapped",\n  "params": {\n    "chain": "P"\n  }\n}\' -H \'content-type:application/json;\' http://127.0.0.1:9650/ext/info\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Output"',title:'"Output"'},'{"jsonrpc":"2.0","result":{"isBootstrapped":true},"id":1}\n')),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"You can still ",(0,l.kt)("strong",{parentName:"p"},"use the public interface")," to query the API. To retrieve a node public IP address using the ",(0,l.kt)("inlineCode",{parentName:"p"},"terraform output")," command as shown above. E.g. for ",(0,l.kt)("inlineCode",{parentName:"p"},"validator02"),":"),(0,l.kt)("pre",{parentName:"admonition"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"terraform -chdir=terraform/multipass output -json validators_ips | jq '.[1]'\n"))),(0,l.kt)("h2",{id:"use-the-ash-cli"},"Use the Ash CLI"),(0,l.kt)("p",null,"The Ash CLI is a powerful tool to interact with Avalanche networks. See ",(0,l.kt)("a",{parentName:"p",href:"/docs/toolkit/ash-cli/introduction"},"Ash CLI - Introduction")," for more information."),(0,l.kt)("h3",{id:"use-the-ash-cli-installed-in-the-vms"},"Use the Ash CLI installed in the VMs"),(0,l.kt)("p",null,"The Ash CLI is ",(0,l.kt)("strong",{parentName:"p"},"installed and automatically configured in the Avalanche nodes")," of the local test network, and can be used through ",(0,l.kt)("inlineCode",{parentName:"p"},"multipass exec"),". For example, to check if the P-Chain is done bootstrapping:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Command"',title:'"Command"'},"multipass exec validator01 -- ash avalanche node is-bootstrapped P\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Output"',title:'"Output"'},"Chain 'P' on node '127.0.0.1:9650': Bootstrapped \u2713\n")),(0,l.kt)("h3",{id:"use-the-ash-cli-installed-locally"},"Use the Ash CLI installed locally"),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"See ",(0,l.kt)("a",{parentName:"p",href:"/docs/toolkit/ash-cli/installation"},"Ash CLI - Installation")," for the installation instructions on your platform.")),(0,l.kt)("p",null,"To use the Ash CLI with the local network, we need to use a ",(0,l.kt)("strong",{parentName:"p"},"custom configuration file"),". Fortunately, the ",(0,l.kt)("inlineCode",{parentName:"p"},"local-test-network.yml")," file is generated by Terraform in the ",(0,l.kt)("inlineCode",{parentName:"p"},"terraform/multipass")," directory. Set it as default for the Ash CLI:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"export ASH_CONFIG=terraform/multipass/local-test-network.yml\nexport AVALANCHE_NETWORK=local\n")),(0,l.kt)("p",null,"You can now use your local Ash CLI, e.g. to list all the Subnets on the local network:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"ash avalanche subnet list\n")),(0,l.kt)("h2",{id:"pre-funded-account"},"Pre-funded account"),(0,l.kt)("p",null,"On local Avalanche networks, a pre-funded account is available with the following private key:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"CB58 encoded: ",(0,l.kt)("inlineCode",{parentName:"li"},"PrivateKey-ewoqjP7PxY4yr3iLTpLisriqt94hdyDFNgchSxGGztUrTXtNN")),(0,l.kt)("li",{parentName:"ul"},"Hex encoded: ",(0,l.kt)("inlineCode",{parentName:"li"},"0x56289e99c94b6912bfc12adc093c9b51124f0dc54ac7a766b2bc5ccf558d8027"))),(0,l.kt)("p",null,"We will use this account in the next tutorials."),(0,l.kt)("h2",{id:"customize-the-installation"},"Customize the installation"),(0,l.kt)("p",null,"Different aspects of the installation can be customized:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"To customize the VMs specs: edit ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/AshAvalanche/ansible-avalanche-getting-started/tree/main/terraform/multipass/main.tf"},(0,l.kt)("inlineCode",{parentName:"a"},"terraform/multipass/main.tf"))),(0,l.kt)("li",{parentName:"ul"},"To customize AvalancheGo installation: edit the variables in ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/AshAvalanche/ansible-avalanche-getting-started/tree/main/inventories/local/group_vars/avalanche_nodes.yml"},(0,l.kt)("inlineCode",{parentName:"a"},"inventories/local/group_vars/avalanche_nodes.yml")),".")),(0,l.kt)("p",null,"For a list of all available variables, see ",(0,l.kt)("a",{parentName:"p",href:"/docs/toolkit/ansible-avalanche-collection/reference/roles/avalanche-node"},"ash.avalanche.node reference"),"."),(0,l.kt)("h2",{id:"use-multipass-to-manage-the-vms"},"Use Multipass to manage the VMs"),(0,l.kt)("h3",{id:"list-the-vms"},"List the VMs"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"multipass list\n")),(0,l.kt)("h3",{id:"stoprestart-the-vms"},"Stop/restart the VMs"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# Stop all VMs\nmultipass stop validator0{1..5} frontend\n# Start all VMs\nmultipass start validator0{1..5} frontend\n# Restart all VMs\nmultipass restart validator0{1..5} frontend\n")),(0,l.kt)("h2",{id:"teardown-the-local-test-network"},"Teardown the local test network"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Destroy the virtual machines:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"terraform -chdir=terraform/multipass destroy\n"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Deactivate the Python venv:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"deactivate\n")))))}u.isMDXComponent=!0}}]);