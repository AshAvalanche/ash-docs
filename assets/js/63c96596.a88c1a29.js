"use strict";(self.webpackChunkash_docs=self.webpackChunkash_docs||[]).push([[5117],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),p=c(n),m=r,k=p["".concat(s,".").concat(m)]||p[m]||u[m]||l;return n?a.createElement(k,i(i({ref:t},d),{},{components:n})):a.createElement(k,i({ref:t},d))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[p]="string"==typeof e?e:r,i[1]=o;for(var c=2;c<l;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3231:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const l={sidebar_position:2},i="ash.avalanche.subnet",o={unversionedId:"toolkit/ansible-avalanche-collection/reference/roles/avalanche-subnet",id:"toolkit/ansible-avalanche-collection/reference/roles/avalanche-subnet",title:"ash.avalanche.subnet",description:"This Ansible role allows to create an Avalanche Subnet, its blockchains and add validators to it.",source:"@site/docs/toolkit/ansible-avalanche-collection/reference/roles/avalanche-subnet.md",sourceDirName:"toolkit/ansible-avalanche-collection/reference/roles",slug:"/toolkit/ansible-avalanche-collection/reference/roles/avalanche-subnet",permalink:"/docs/toolkit/ansible-avalanche-collection/reference/roles/avalanche-subnet",draft:!1,editUrl:"https://github.com/AshAvalanche/ash-docs/tree/main/docs/toolkit/ansible-avalanche-collection/reference/roles/avalanche-subnet.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"toolkitSidebar",previous:{title:"ash.avalanche.node",permalink:"/docs/toolkit/ansible-avalanche-collection/reference/roles/avalanche-node"},next:{title:"ash.avalanche.faucet",permalink:"/docs/toolkit/ansible-avalanche-collection/reference/roles/avalanche-faucet"}},s={},c=[{value:"Role variables",id:"role-variables",level:2},{value:"Inventory requirements",id:"inventory-requirements",level:2},{value:"Blockchain configuration",id:"blockchain-configuration",level:2}],d={toc:c},p="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"ashavalanchesubnet"},"ash.avalanche.subnet"),(0,r.kt)("p",null,"This Ansible role allows to create an Avalanche Subnet, its blockchains and add validators to it."),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"This role uses Ash CLI under the hood."),(0,r.kt)("p",{parentName:"admonition"},"The Ash CLI uses ",(0,r.kt)("strong",{parentName:"p"},"plain-text private keys")," to interact with wallets. ",(0,r.kt)("strong",{parentName:"p"},"It should never be used on the mainnet"),". If you try do so, commands will fail with: ",(0,r.kt)("inlineCode",{parentName:"p"},"AvalancheNetwork error: wallet creation is not allowed on network 'mainnet'"),"."),(0,r.kt)("p",{parentName:"admonition"},"To interact with wallets on the mainnet (e.g. to create Subnets and blockchains), you should use the ",(0,r.kt)("a",{parentName:"p",href:"https://docs.avax.network/subnets/create-a-mainnet-subnet"},"Avalanche CLI")," which is compatible with Ledger devices.")),(0,r.kt)("h2",{id:"role-variables"},"Role variables"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Variable"),(0,r.kt)("th",{parentName:"tr",align:null},"Comment"),(0,r.kt)("th",{parentName:"tr",align:null},"Default value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"subnet_avalanche_network_id")),(0,r.kt)("td",{parentName:"tr",align:null},"The ",(0,r.kt)("a",{parentName:"td",href:"https://docs.avax.network/build/references/avalanchego-config-flags/#network-id"},"Network ID")," in which to create the Subnet"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"local"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"subnet_txs_private_key")),(0,r.kt)("td",{parentName:"tr",align:null},"The private key used to sign all Subnet related transactions. The P-Chain address of the account will also be used as control key for the Subnet."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"PrivateKey-ewoqjP7PxY4yr3iLTpLisriqt94hdyDFNgchSxGGztUrTXtNN"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"subnet_txs_key_encoding")),(0,r.kt)("td",{parentName:"tr",align:null},"Encoding of the private key. Can be ",(0,r.kt)("inlineCode",{parentName:"td"},"cb58")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"hex"),"."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"cb58"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"subnet_blockchains_check_name")),(0,r.kt)("td",{parentName:"tr",align:null},"Whether to fail if a blockchain with the same name already exists"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"true"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"subnet_blockchains_list")),(0,r.kt)("td",{parentName:"tr",align:null},"List of blockchains to create in the Subnet. See ",(0,r.kt)("a",{parentName:"td",href:"#blockchain-configuration"},"Blockchain configuration")," for the list structure."),(0,r.kt)("td",{parentName:"tr",align:null},"NA")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"subnet_validators_add"),":"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether to add the validatores from ",(0,r.kt)("inlineCode",{parentName:"td"},"subnet_validators_ids_list")," to the Subnet"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"true"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"subnet_validators_ids_list")),(0,r.kt)("td",{parentName:"tr",align:null},"List of node IDs to add to the Subnet (useful for third-party nodes)"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"[]"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"subnet_validator_start_time")),(0,r.kt)("td",{parentName:"tr",align:null},"Start time of the validation in RFC 3339 format: ",(0,r.kt)("inlineCode",{parentName:"td"},"YYYY-MM-DDTHH:MM:SSZ")," format"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'\'{{ lookup("pipe", "date -d \'\'2 minutes\'\' --rfc-3339=seconds").replace(" ", "T")  }}\' # in 2 minutes'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"subnet_validator_end_time")),(0,r.kt)("td",{parentName:"tr",align:null},"End time of the validation in RFC 3339 format: ",(0,r.kt)("inlineCode",{parentName:"td"},"YYYY-MM-DDTHH:MM:SSZ")," format"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'\'{{ lookup("pipe", "date -d \'\'1 week\'\' --rfc-3339=seconds").replace(" ", "T")  }}\' # in 1 week'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"subnet_validator_stake_or_weight")),(0,r.kt)("td",{parentName:"tr",align:null},"Stake (for elastic Subnets) or weight (for permissioned Subnets) of validators"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"1"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"subnet_validator_delegation_fee")),(0,r.kt)("td",{parentName:"tr",align:null},"Delegation fee in percentage."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"2"))))),(0,r.kt)("h2",{id:"inventory-requirements"},"Inventory requirements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"The node used to issue transactions")," has to be in the ",(0,r.kt)("inlineCode",{parentName:"li"},"subnet_txs_host")," group."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"The nodes to be added as validators")," to the Subnet have to be in the ",(0,r.kt)("inlineCode",{parentName:"li"},"subnet_validators")," group. The Ansible host has to be able to connect to those nodes via SSH.")),(0,r.kt)("h2",{id:"blockchain-configuration"},"Blockchain configuration"),(0,r.kt)("p",null,"Each blockchain in ",(0,r.kt)("inlineCode",{parentName:"p"},"subnet_blockchains_list")," is defined by a dictionary with the following keys:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name"),": Name of the blockchain"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"vm"),": Name of the VM in the collection to use for the blockchain. See ",(0,r.kt)("a",{parentName:"li",href:"/docs/toolkit/ansible-avalanche-collection/reference/roles/avalanche-node#supported-vms-and-avalanchego-compatibility"},"Supported VMs and AvalancheGo compatibility")," for the list of supported VMs."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"genesis_data"),": Genesis data of the blockchain. The structure of the genesis data is different for each VM:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"For the ",(0,r.kt)("inlineCode",{parentName:"li"},"subnet-evm"),":",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'config:\n  chainId: 66666\n  homesteadBlock: 0\n  eip150Block: 0\n  eip150Hash: "0x2086799aeebeae135c246c65021c82b4e15a2c451340993aacfd2751886514f0"\n  eip155Block: 0\n  eip158Block: 0\n  byzantiumBlock: 0\n  constantinopleBlock: 0\n  petersburgBlock: 0\n  istanbulBlock: 0\n  muirGlacierBlock: 0\n  subnetEVMTimestamp: 0\n  feeConfig:\n    gasLimit: 8000000\n    minBaseFee: 25000000000\n    targetGas: 15000000\n    baseFeeChangeDenominator: 36\n    minBlockGasCost: 0\n    maxBlockGasCost: 1000000\n    targetBlockRate: 2\n    blockGasCostStep: 200000\nalloc:\n  8db97C7cEcE249c2b98bDC0226Cc4C2A57BF52FC:\n    balance: "0x295BE96E64066972000000"\nnonce: "0x0"\ntimestamp: "0x0"\nextraData: "0x00"\ngasLimit: "0x7A1200"\ndifficulty: "0x0"\nmixHash: "0x0000000000000000000000000000000000000000000000000000000000000000"\ncoinbase: "0x0000000000000000000000000000000000000000"\nnumber: "0x0"\ngasUsed: "0x0"\nparentHash: "0x0000000000000000000000000000000000000000000000000000000000000000"\n')))))),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"To generate the genesis data for a new blockchain, you can use the Avalanche CLI wizard. See ",(0,r.kt)("a",{parentName:"p",href:"/docs/toolkit/ash-cli/tutorials/local-subnet#create-the-subnet-evm-blockchain-configuration"},"Create the Subnet EVM blockchain configuration"),".")))}u.isMDXComponent=!0}}]);