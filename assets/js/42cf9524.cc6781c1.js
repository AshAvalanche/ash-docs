"use strict";(self.webpackChunkash_docs=self.webpackChunkash_docs||[]).push([[4803],{9613:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>v});var a=n(9496);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),s=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=s(n),m=r,v=u["".concat(c,".").concat(m)]||u[m]||d[m]||o;return n?a.createElement(v,l(l({ref:t},p),{},{components:n})):a.createElement(v,l({ref:t},p))}));function v(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[u]="string"==typeof e?e:r,l[1]=i;for(var s=2;s<o;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7653:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var a=n(7605),r=(n(9496),n(9613));const o={sidebar_position:1},l="ash.avalanche.convert",i={unversionedId:"toolkit/ansible-avalanche-collection/reference/filters/convert",id:"toolkit/ansible-avalanche-collection/reference/filters/convert",title:"ash.avalanche.convert",description:"The ash.avalanche.convert filter converts an amount between AVAX units.",source:"@site/docs/toolkit/ansible-avalanche-collection/reference/filters/convert.md",sourceDirName:"toolkit/ansible-avalanche-collection/reference/filters",slug:"/toolkit/ansible-avalanche-collection/reference/filters/convert",permalink:"/docs/toolkit/ansible-avalanche-collection/reference/filters/convert",draft:!1,editUrl:"https://github.com/AshAvalanche/ash-docs/tree/main/docs/toolkit/ansible-avalanche-collection/reference/filters/convert.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"toolkitSidebar",previous:{title:"Filters",permalink:"/docs/category/filters"},next:{title:"ash.avalanche.XXX_to_XXX",permalink:"/docs/toolkit/ansible-avalanche-collection/reference/filters/xxx_to_xxx"}},c={},s=[{value:"Usage",id:"usage",level:2},{value:"Supported units",id:"supported-units",level:2}],p={toc:s},u="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"ashavalancheconvert"},"ash.avalanche.convert"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"ash.avalanche.convert")," filter converts an amount between AVAX units."),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("p",null,"This filter is useful to submit transactions without errors in the number of zeros:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"ash.avalanche.tx:\n  [...]\n  params:\n    [...]\n    amount: \"{{ 25 | ash.avalanche.convert('AVAX', 'nAVAX') | int }}\"\n")),(0,r.kt)("h2",{id:"supported-units"},"Supported units"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Unit"),(0,r.kt)("th",{parentName:"tr",align:null},"Amount in wei"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"wei")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"1"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"gwei")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"navax")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"1e9")," (",(0,r.kt)("inlineCode",{parentName:"td"},"1000000000"),")")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"avax")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"eth")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"1e18")," (",(0,r.kt)("inlineCode",{parentName:"td"},"1000000000000000000"),")")))),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"The filter is not case sensitive: ",(0,r.kt)("inlineCode",{parentName:"p"},"ash.avalanche.convert('AVAX', 'nAVAX')")," is the same as ",(0,r.kt)("inlineCode",{parentName:"p"},"ash.avalanche.convert('avax', 'navax')"))))}d.isMDXComponent=!0}}]);