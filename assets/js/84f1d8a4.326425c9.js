"use strict";(self.webpackChunkash_docs=self.webpackChunkash_docs||[]).push([[9881],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>v});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},h="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),h=c(a),u=r,v=h["".concat(s,".").concat(u)]||h[u]||m[u]||o;return a?n.createElement(v,l(l({ref:t},p),{},{components:a})):n.createElement(v,l({ref:t},p))}));function v(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,l=new Array(o);l[0]=u;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[h]="string"==typeof e?e:r,l[1]=i;for(var c=2;c<o;c++)l[c]=a[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},1470:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var n=a(7462),r=(a(7294),a(3905));const o={sidebar_position:7},l="Avalanche Transactions",i={unversionedId:"toolkit/ansible-avalanche-collection/tutorials/avalanche-transactions",id:"toolkit/ansible-avalanche-collection/tutorials/avalanche-transactions",title:"Avalanche Transactions",description:"In this section, we will learn how to use the ash.avalanche.tx module of the Ansible Avalanche Collection to submit transactions to an Avalanche network.",source:"@site/docs/toolkit/ansible-avalanche-collection/tutorials/avalanche-transactions.md",sourceDirName:"toolkit/ansible-avalanche-collection/tutorials",slug:"/toolkit/ansible-avalanche-collection/tutorials/avalanche-transactions",permalink:"/docs/toolkit/ansible-avalanche-collection/tutorials/avalanche-transactions",draft:!1,editUrl:"https://github.com/AshAvalanche/ash-docs/tree/main/docs/toolkit/ansible-avalanche-collection/tutorials/avalanche-transactions.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"toolkitSidebar",previous:{title:"Blockchain Management",permalink:"/docs/toolkit/ansible-avalanche-collection/tutorials/blockchain-management"},next:{title:"Subnet Blockchain Explorer",permalink:"/docs/toolkit/ansible-avalanche-collection/tutorials/subnet-blockchain-explorer"}},s={},c=[{value:"Perform an AVAX transfer from the X-Chain to the P-Chain",id:"perform-an-avax-transfer-from-the-x-chain-to-the-p-chain",level:2}],p={toc:c},h="wrapper";function m(e){let{components:t,...a}=e;return(0,r.kt)(h,(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"avalanche-transactions"},"Avalanche Transactions"),(0,r.kt)("p",null,"In this section, we will learn how to use the ",(0,r.kt)("inlineCode",{parentName:"p"},"ash.avalanche.tx")," module of the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/AshAvalanche/ansible-avalanche-collection"},"Ansible Avalanche Collection")," to submit transactions to an Avalanche network."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"For this tutorial, we will use the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/AshAvalanche/ansible-avalanche-getting-started/tree/main/inventories/local"},(0,r.kt)("inlineCode",{parentName:"a"},"local"))," inventory provided by the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/AshAvalanche/ansible-avalanche-getting-started"},"Ansible Avalanche Getting Started")," repository. See ",(0,r.kt)("a",{parentName:"p",href:"./local-test-network"},"Create a Local Test Network")," for details.")),(0,r.kt)("h2",{id:"perform-an-avax-transfer-from-the-x-chain-to-the-p-chain"},"Perform an AVAX transfer from the X-Chain to the P-Chain"),(0,r.kt)("p",null,"The notebook ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/AshAvalanche/ansible-avalanche-collection/tree/main/playbooks/transfer_avax.yml"},"ash.avalanche.transfer_avax")," is provided as an example. We will call this notebook and follow best practices to secure Avalanche keystore credentials using ",(0,r.kt)("a",{parentName:"p",href:"https://docs.ansible.com/ansible/latest/user_guide/vault.html"},"Ansible vault"),":"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"In ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/AshAvalanche/ansible-avalanche-getting-started/tree/main/inventories/local/group_vars/api_node.yml"},"inventories/local/group_vars/api_node.yml"),", the keystore crendentials have been encrypted using Ansible vault:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"avax_transfer_from_username: !vault |\n  $ANSIBLE_VAULT;1.1;AES256\n  65643665373461343366366161623038383134396339303931386131653662356663366530613539\n  3461323730646262626531396461353164653939333730380a393637626637366136366439383035\n  37653661343365376531316264316464343763356136306430383865363863343933323333373437\n  6366336430313233340a343465316663653630626566363131636438333338383236613631633563\n  6138\navax_transfer_from_password: !vault |\n  $ANSIBLE_VAULT;1.1;AES256\n  36363962333839616366363730306264373332373336316332356162323230313039393265626639\n  6265613633623538396266323232353130643466646261370a653161333066663034346536346365\n  38346235653736636438663265353130303665323939343663663961386635626539616464373636\n  3232643435333437660a666137323964386338316361333931356232616163663636646262386130\n  3461\n")),(0,r.kt)("p",{parentName:"li"},"This avoids storing usernames and passwords in plain text.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"To run the notebook, we need to provide the vault password (",(0,r.kt)("inlineCode",{parentName:"p"},"ewoq"),"):"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"ansible-playbook ash.avalanche.transfer_avax -i inventories/local --ask-vault-password\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"The notebook issues 2 transactions to transfer 1 AVAX from the X-Chain to the C-Chain and you can see the ",(0,r.kt)("inlineCode",{parentName:"p"},"tx")," module output format:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'xchain_transac_res:\n  blockchain: X\n  changed: true\n  endpoint: http://192.168.60.11:9650/ext/bc/X\n  failed: false\n  num_retries: 0\n  response:\n    id: 1\n    jsonrpc: "2.0"\n    result:\n      status: Accepted\n  tx_data:\n    id: 1\n    jsonrpc: "2.0"\n    method: avm.export\n    params:\n      amount: 1000000000\n      assetID: AVAX\n      password: VALUE_SPECIFIED_IN_NO_LOG_PARAMETER\n      to: C-local18jma8ppw3nhx5r4ap8clazz0dps7rv5u00z96u\n      username: VALUE_SPECIFIED_IN_NO_LOG_PARAMETER\n  tx_id: 2vQi7Smp7jm39moowZNZMfCfismswerYVtB14iSHk4jfg6nPyA\n')))))}m.isMDXComponent=!0}}]);