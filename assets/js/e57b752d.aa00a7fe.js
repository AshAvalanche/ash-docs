"use strict";(self.webpackChunkash_docs=self.webpackChunkash_docs||[]).push([[521],{9613:(e,a,t)=>{t.d(a,{Zo:()=>p,kt:()=>d});var n=t(9496);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function o(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?o(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function i(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=n.createContext({}),c=function(e){var a=n.useContext(s),t=a;return e&&(t="function"==typeof e?e(a):l(l({},a),e)),t},p=function(e){var a=c(e.components);return n.createElement(s.Provider,{value:a},e.children)},h="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},m=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),h=c(t),m=r,d=h["".concat(s,".").concat(m)]||h[m]||u[m]||o;return t?n.createElement(d,l(l({ref:a},p),{},{components:t})):n.createElement(d,l({ref:a},p))}));function d(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var o=t.length,l=new Array(o);l[0]=m;var i={};for(var s in a)hasOwnProperty.call(a,s)&&(i[s]=a[s]);i.originalType=e,i[h]="string"==typeof e?e:r,l[1]=i;for(var c=2;c<o;c++)l[c]=t[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},7273:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>s,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var n=t(4778),r=(t(9496),t(9613));const o={sidebar_position:7},l="Avalanche Transactions",i={unversionedId:"tools/ansible-avalanche-collection/tutorials/avalanche-transactions",id:"tools/ansible-avalanche-collection/tutorials/avalanche-transactions",title:"Avalanche Transactions",description:"In this section, we will learn how to use the ash.avalanche.tx module of the Ansible Avalanche Collection to submit transactions to an Avalanche network.",source:"@site/docs/tools/ansible-avalanche-collection/tutorials/avalanche-transactions.md",sourceDirName:"tools/ansible-avalanche-collection/tutorials",slug:"/tools/ansible-avalanche-collection/tutorials/avalanche-transactions",permalink:"/docs/tools/ansible-avalanche-collection/tutorials/avalanche-transactions",draft:!1,editUrl:"https://github.com/AshAvalanche/ash-docs/tree/main/docs/tools/ansible-avalanche-collection/tutorials/avalanche-transactions.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"toolsSidebar",previous:{title:"Blockchain Management",permalink:"/docs/tools/ansible-avalanche-collection/tutorials/blockchain-management"},next:{title:"Reference",permalink:"/docs/category/reference"}},s={},c=[{value:"Runing a X chain to P chain transaction",id:"runing-a-x-chain-to-p-chain-transaction",level:2}],p={toc:c};function h(e){let{components:a,...t}=e;return(0,r.kt)("wrapper",(0,n.Z)({},p,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"avalanche-transactions"},"Avalanche Transactions"),(0,r.kt)("p",null,"In this section, we will learn how to use the ",(0,r.kt)("inlineCode",{parentName:"p"},"ash.avalanche.tx")," module of the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/AshAvalanche/ansible-avalanche-collection"},"Ansible Avalanche Collection")," to submit transactions to an Avalanche network."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"For this tutorial, we will use the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/AshAvalanche/ansible-avalanche-getting-started/tree/main/inventories/local"},(0,r.kt)("inlineCode",{parentName:"a"},"local"))," inventory provided by the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/AshAvalanche/ansible-avalanche-getting-started"},"Ansible Avalanche Getting Started")," repository. See ",(0,r.kt)("a",{parentName:"p",href:"./local-test-network"},"Create a local test network")," for details.")),(0,r.kt)("h2",{id:"runing-a-x-chain-to-p-chain-transaction"},"Runing a X chain to P chain transaction"),(0,r.kt)("p",null,"The notebook ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/AshAvalanche/ansible-avalanche-collection/tree/main/playbooks/transfer_avax.yml"},"ash.avalanche.transfer_avax")," is provided as an example. We will call this notebook and follow best practices to secure Avalanche keystore credentials using ",(0,r.kt)("a",{parentName:"p",href:"https://docs.ansible.com/ansible/latest/user_guide/vault.html"},"Ansible vault"),":"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"In ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/AshAvalanche/ansible-avalanche-getting-started/tree/main/inventories/local/group_vars/api_node.yml"},"inventories/local/group_vars/api_node.yml"),", the keystore crendentials have been encrypted using Ansible vault:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"avax_transfer_from_username: !vault |\n  $ANSIBLE_VAULT;1.1;AES256\n  65643665373461343366366161623038383134396339303931386131653662356663366530613539\n  3461323730646262626531396461353164653939333730380a393637626637366136366439383035\n  37653661343365376531316264316464343763356136306430383865363863343933323333373437\n  6366336430313233340a343465316663653630626566363131636438333338383236613631633563\n  6138\navax_transfer_from_password: !vault |\n  $ANSIBLE_VAULT;1.1;AES256\n  36363962333839616366363730306264373332373336316332356162323230313039393265626639\n  6265613633623538396266323232353130643466646261370a653161333066663034346536346365\n  38346235653736636438663265353130303665323939343663663961386635626539616464373636\n  3232643435333437660a666137323964386338316361333931356232616163663636646262386130\n  3461\n")),(0,r.kt)("p",{parentName:"li"},"This avoids storing usernames and passwords in plain text.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"To run the notebook, we need to provide the vault password (",(0,r.kt)("inlineCode",{parentName:"p"},"ewoq"),"):"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"ansible-playbook ash.avalanche.transfer_avax -i inventories/local --ask-vault-password\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"The notebook issues 2 transactions to transfer 1 AVAX from the X-Chain to the C-Chain and you can see the ",(0,r.kt)("inlineCode",{parentName:"p"},"tx")," module output format:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'xchain_transac_res:\n  blockchain: X\n  changed: true\n  endpoint: http://192.168.60.11:9650/ext/bc/X\n  failed: false\n  num_retries: 0\n  response:\n    id: 1\n    jsonrpc: "2.0"\n    result:\n      status: Accepted\n  tx_data:\n    id: 1\n    jsonrpc: "2.0"\n    method: avm.export\n    params:\n      amount: 1000000000\n      assetID: AVAX\n      password: VALUE_SPECIFIED_IN_NO_LOG_PARAMETER\n      to: C-local18jma8ppw3nhx5r4ap8clazz0dps7rv5u00z96u\n      username: VALUE_SPECIFIED_IN_NO_LOG_PARAMETER\n  tx_id: 2vQi7Smp7jm39moowZNZMfCfismswerYVtB14iSHk4jfg6nPyA\n')))))}h.isMDXComponent=!0}}]);