"use strict";(self.webpackChunkash_docs=self.webpackChunkash_docs||[]).push([[8358],{9613:(t,e,n)=>{n.d(e,{Zo:()=>u,kt:()=>h});var o=n(9496);function i(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,o)}return n}function a(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){i(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e){if(null==t)return{};var n,o,i=function(t,e){if(null==t)return{};var n,o,i={},r=Object.keys(t);for(o=0;o<r.length;o++)n=r[o],e.indexOf(n)>=0||(i[n]=t[n]);return i}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(o=0;o<r.length;o++)n=r[o],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(i[n]=t[n])}return i}var c=o.createContext({}),s=function(t){var e=o.useContext(c),n=e;return t&&(n="function"==typeof t?t(e):a(a({},e),t)),n},u=function(t){var e=s(t.components);return o.createElement(c.Provider,{value:e},t.children)},f="mdxType",p={inlineCode:"code",wrapper:function(t){var e=t.children;return o.createElement(o.Fragment,{},e)}},m=o.forwardRef((function(t,e){var n=t.components,i=t.mdxType,r=t.originalType,c=t.parentName,u=l(t,["components","mdxType","originalType","parentName"]),f=s(n),m=i,h=f["".concat(c,".").concat(m)]||f[m]||p[m]||r;return n?o.createElement(h,a(a({ref:e},u),{},{components:n})):o.createElement(h,a({ref:e},u))}));function h(t,e){var n=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var r=n.length,a=new Array(r);a[0]=m;var l={};for(var c in e)hasOwnProperty.call(e,c)&&(l[c]=e[c]);l.originalType=t,l[f]="string"==typeof t?t:i,a[1]=l;for(var s=2;s<r;s++)a[s]=n[s];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},312:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>s});var o=n(1163),i=(n(9496),n(9613));const r={sidebar_position:2},a="Custom Configuration",l={unversionedId:"toolkit/ash-cli/tutorials/custom-configuration",id:"toolkit/ash-cli/tutorials/custom-configuration",title:"Custom Configuration",description:"The CLI relies on YAML configuration files that contains the list of known Avalanche networks. This is very convenient to quickly switch between environments and to share configurations with other developers.",source:"@site/docs/toolkit/ash-cli/tutorials/custom-configuration.md",sourceDirName:"toolkit/ash-cli/tutorials",slug:"/toolkit/ash-cli/tutorials/custom-configuration",permalink:"/docs/toolkit/ash-cli/tutorials/custom-configuration",draft:!1,editUrl:"https://github.com/AshAvalanche/ash-docs/tree/main/docs/toolkit/ash-cli/tutorials/custom-configuration.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"toolkitSidebar",previous:{title:"Network Exploration",permalink:"/docs/toolkit/ash-cli/tutorials/network-exploration"}},c={},s=[{value:"Configuration file layout",id:"configuration-file-layout",level:2},{value:"Initialize and use a custom configuration file",id:"initialize-and-use-a-custom-configuration-file",level:2}],u={toc:s},f="wrapper";function p(t){let{components:e,...n}=t;return(0,i.kt)(f,(0,o.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"custom-configuration"},"Custom Configuration"),(0,i.kt)("p",null,"The CLI relies on YAML configuration files that contains the list of known Avalanche networks. This is very convenient to quickly ",(0,i.kt)("strong",{parentName:"p"},"switch between environments")," and to ",(0,i.kt)("strong",{parentName:"p"},"share configurations with other developers"),"."),(0,i.kt)("h2",{id:"configuration-file-layout"},"Configuration file layout"),(0,i.kt)("p",null,"For each network, at least ",(0,i.kt)("strong",{parentName:"p"},"the P-Chain configuration has to be provided")," (in the Primary Network) with its ID and RPC endpoint. All the other Subnets/blockchains will be retrieved/enriched from the P-Chain."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'{9-12} title="~/.config/ash/my-custom-config.yaml"',"{9-12}":!0,title:'"~/.config/ash/my-custom-config.yaml"'},"---\navalancheNetworks:\n  - name: my-network\n    subnets:\n      - id: 11111111111111111111111111111111LpoYY\n        controlKeys: []\n        threshold: 0\n        blockchains:\n          - id: 11111111111111111111111111111111LpoYY\n            name: P-Chain\n            vmType: PVM\n            rpcUrl: http://validator01.ash.local:9650/ext/bc/P\n          [...]\n")),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"A single configuration file can contain multiple networks.")),(0,i.kt)("h2",{id:"initialize-and-use-a-custom-configuration-file"},"Initialize and use a custom configuration file"),(0,i.kt)("p",null,"The CLI comes with a convenient command to initialize a configuration file with the default networks:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"ash conf init --config ~/.config/ash/my-custom-config.yaml\n")),(0,i.kt)("p",null,"The generated file contains the default list of networks. You can then edit it to add your own networks."),(0,i.kt)("p",null,"Once the configuration file is ready, you can use it with the ",(0,i.kt)("inlineCode",{parentName:"p"},"--config")," option or with the ",(0,i.kt)("inlineCode",{parentName:"p"},"ASH_CONFIG")," environment variable:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"ash avalanche subnet list --config ~/.config/ash/my-custom-config.yaml --network my-network\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"export ASH_CONFIG=~/.config/ash/my-custom-config.yaml\n\nash avalanche subnet list --network my-network\n")))}p.isMDXComponent=!0}}]);