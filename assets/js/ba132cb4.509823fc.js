"use strict";(self.webpackChunkash_docs=self.webpackChunkash_docs||[]).push([[8246],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),c=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(i.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=c(n),h=r,m=u["".concat(i,".").concat(h)]||u[h]||p[h]||o;return n?a.createElement(m,l(l({ref:t},d),{},{components:n})):a.createElement(m,l({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=h;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[u]="string"==typeof e?e:r,l[1]=s;for(var c=2;c<o;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(7294),r=n(6010);const o={tabItem:"tabItem_Ymn6"};function l(e){let{children:t,hidden:n,className:l}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(o.tabItem,l),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>N});var a=n(7462),r=n(7294),o=n(6010),l=n(2466),s=n(6550),i=n(1980),c=n(7392),d=n(12);function u(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function p(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??u(n);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function h(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:n}=e;const a=(0,s.k6)(),o=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,i._X)(o),(0,r.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(a.location.search);t.set(o,e),a.replace({...a.location,search:t.toString()})}),[o,a])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,o=p(e),[l,s]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!h({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:o}))),[i,c]=m({queryString:n,groupId:a}),[u,f]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,o]=(0,d.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:a}),b=(()=>{const e=i??u;return h({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{b&&s(b)}),[b]);return{selectedValue:l,selectValue:(0,r.useCallback)((e=>{if(!h({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);s(e),c(e),f(e)}),[c,f,o]),tabValues:o}}var b=n(2389);const k={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function g(e){let{className:t,block:n,selectedValue:s,selectValue:i,tabValues:c}=e;const d=[],{blockElementScrollPositionUntilNextRender:u}=(0,l.o5)(),p=e=>{const t=e.currentTarget,n=d.indexOf(t),a=c[n].value;a!==s&&(u(t),i(a))},h=e=>{let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const n=d.indexOf(e.currentTarget)+1;t=d[n]??d[0];break}case"ArrowLeft":{const n=d.indexOf(e.currentTarget)-1;t=d[n]??d[d.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},t)},c.map((e=>{let{value:t,label:n,attributes:l}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,key:t,ref:e=>d.push(e),onKeyDown:h,onClick:p},l,{className:(0,o.Z)("tabs__item",k.tabItem,l?.className,{"tabs__item--active":s===t})}),n??t)})))}function y(e){let{lazy:t,children:n,selectedValue:a}=e;const o=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function v(e){const t=f(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",k.tabList)},r.createElement(g,(0,a.Z)({},e,t)),r.createElement(y,(0,a.Z)({},e,t)))}function N(e){const t=(0,b.Z)();return r.createElement(v,(0,a.Z)({key:String(t)},e))}},2097:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>m,frontMatter:()=>s,metadata:()=>c,toc:()=>u});var a=n(7462),r=(n(7294),n(3905)),o=n(4866),l=n(5162);const s={sidebar_position:5},i="3. Node ID / BLS keys Secrets Creation",c={unversionedId:"console/guides/local-network/node-ids",id:"console/guides/local-network/node-ids",title:"3. Node ID / BLS keys Secrets Creation",description:"UPDATE: The Ash Console open beta has ended. Looking to launch your Avalanche L1? See our latest Ash Managed L1s offer announcement!",source:"@site/docs/console/guides/local-network/node-ids.md",sourceDirName:"console/guides/local-network",slug:"/console/guides/local-network/node-ids",permalink:"/docs/console/guides/local-network/node-ids",draft:!1,editUrl:"https://github.com/AshAvalanche/ash-docs/tree/main/docs/console/guides/local-network/node-ids.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"consoleSidebar",previous:{title:"2. Cloud Credentials and Regions setup",permalink:"/docs/console/guides/local-network/cloud-region"},next:{title:"4. Avalanche Nodes Creation",permalink:"/docs/console/guides/local-network/avalanche-nodes"}},d={},u=[{value:"Fetch the node IDs certificates and BLS keys",id:"fetch-the-node-ids-certificates-and-bls-keys",level:2},{value:"Create the node ID secrets",id:"create-the-node-id-secrets",level:2},{value:"Fetch the node IDs blueprint",id:"fetch-the-node-ids-blueprint",level:2},{value:"Create the node ID secrets",id:"create-the-node-id-secrets-1",level:2}],p={toc:u},h="wrapper";function m(e){let{components:t,...s}=e;return(0,r.kt)(h,(0,a.Z)({},p,s,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"3-node-id--bls-keys-secrets-creation"},"3. Node ID / BLS keys Secrets Creation"),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("strong",{parentName:"p"},"UPDATE"),": The Ash Console open beta has ended. Looking to launch your Avalanche L1? See our latest ",(0,r.kt)("a",{parentName:"p",href:"https://ashavax.hashnode.dev/announcing-ash-managed-l1s-and-avalanche-builder-credits"},"Ash Managed L1s offer announcement"),"!")),(0,r.kt)("p",null,"The Ash Console ",(0,r.kt)("strong",{parentName:"p"},"decorelates the node ID from Avalanche nodes"),", so that you can have a better control over your validator nodes' lifecycle."),(0,r.kt)("p",null,"Node IDs are stored as ",(0,r.kt)("a",{parentName:"p",href:"/docs/console/glossary#secret"},"secrets")," in the Console."),(0,r.kt)("p",null,"In this part of the guide, we will create ",(0,r.kt)("strong",{parentName:"p"},"5 node ID secrets")," for the 5 nodes of our Avalanche devnet."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"The Node ID secrets need to match the hardcoded Node IDs in the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/ava-labs/avalanchego/blob/master/genesis/genesis_local.json#L47"},(0,r.kt)("inlineCode",{parentName:"a"},"genesis_local.json"))," file of the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/ava-labs/avalanchego"},"AvalancheGo")," codebase.")),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"console",label:"Using the Ash Console",default:!0,mdxType:"TabItem"},(0,r.kt)("h2",{id:"fetch-the-node-ids-certificates-and-bls-keys"},"Fetch the node IDs certificates and BLS keys"),(0,r.kt)("p",null,"Before creating the Node ID secrets corresponding to the hardcoded Node IDs of the Avalanche devnet, we need to fetch the certificates and BLS keys of these nodes. They can be found in the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/AshAvalanche/ansible-avalanche-getting-started/tree/main/files/staking"},"ansible-avalanche-getting-started")," repository."),(0,r.kt)("p",null,"Here is a bash loop to quickly fetch the certificates and BLS keys of the 5 nodes:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'for i in {01..05}; do\n  base_url="https://raw.githubusercontent.com/AshAvalanche/ansible-avalanche-getting-started/refs/heads/main/files/staking"\n  curl -sSL "${base_url}/validator${i}.bls.key" -o "validator${i}.bls.key"\n  curl -sSL "${base_url}/validator${i}.crt" -o "validator${i}.crt"\n  curl -sSL "${base_url}/validator${i}.key" -o "validator${i}.key"\ndone\n')),(0,r.kt)("h2",{id:"create-the-node-id-secrets"},"Create the node ID secrets"),(0,r.kt)("p",null,"From the ",(0,r.kt)("a",{parentName:"p",href:"https://console.ash.center"},"Ash Console")," project overview page, navigate to the ",(0,r.kt)("strong",{parentName:"p"},"Secrets")," tab:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Click on the ",(0,r.kt)("inlineCode",{parentName:"li"},"Create Secret")," button."),(0,r.kt)("li",{parentName:"ul"},"Select the ",(0,r.kt)("inlineCode",{parentName:"li"},"Node ID")," secret type."),(0,r.kt)("li",{parentName:"ul"},"Set the name ",(0,r.kt)("inlineCode",{parentName:"li"},"local-node-id-01")," for the secret."),(0,r.kt)("li",{parentName:"ul"},"Paste the Node ID corresponding to the certificate and key files, e.g., ",(0,r.kt)("inlineCode",{parentName:"li"},"NodeID-7Xhw2mDxuDS44j42TCB6U5579esbSt3Lg")," for the first node."),(0,r.kt)("li",{parentName:"ul"},"Upload the certificate, key and BLS key files of the approriate node in the corresponding fields."),(0,r.kt)("li",{parentName:"ul"},"Click on the ",(0,r.kt)("inlineCode",{parentName:"li"},"Create")," button to add secret to the project.")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Ash Console NodeID secret create",src:n(274).Z,width:"1165",height:"646"})),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Repeat the process above for the 4 other Node ID secrets."))),(0,r.kt)(l.Z,{value:"cli",label:"Using the Ash CLI",mdxType:"TabItem"},(0,r.kt)("h2",{id:"fetch-the-node-ids-blueprint"},"Fetch the node IDs blueprint"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Learn more about blueprints in the ",(0,r.kt)("a",{parentName:"p",href:"/docs/console/reference/blueprints"},"Console Blueprints")," reference.")),(0,r.kt)("p",null,"We will use the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/AshAvalanche/ash-rs/blob/main/crates/ash_cli/examples/console/blueprint/local-node-ids.yml"},"local-node-ids.yml")," blueprint to create the node ID secrets for the 5 nodes of our Avalanche devnet."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"If not already done, create a folder for this guide and navigate to it:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir -p ash-console-guides/devnet-network\ncd ash-console-guides/devnet-network\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Fetch the blueprint from the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/AshAvalanche/ash-rs/blob/main/crates/ash_cli/examples/console/blueprint/local-node-ids.yml"},(0,r.kt)("inlineCode",{parentName:"a"},"ash-rs"))," repository:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"curl -sSL https://raw.githubusercontent.com/AshAvalanche/ash-rs/main/crates/ash_cli/examples/console/blueprint/local-node-ids.yml -o local-node-ids.yml\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Take a look at the blueprint. You will see that it defines 5 secrets of type ",(0,r.kt)("inlineCode",{parentName:"p"},"nodeId")," with their TLS keys and certificates:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Command"',title:'"Command"'},"cat local-node-ids.yml\n")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="Output"',title:'"Output"'},"secrets:\n  - name: local-node-id-01\n    secretType: nodeId\n    nodeId: NodeID-7Xhw2mDxuDS44j42TCB6U5579esbSt3Lg\n    nodeCert: LS0tLS...\n    nodeKey: LS0tLS...\n    nodeBlsKey: U2fcxy...\n  # ...\n")))),(0,r.kt)("h2",{id:"create-the-node-id-secrets-1"},"Create the node ID secrets"),(0,r.kt)("p",null,"Apply the blueprint with the ",(0,r.kt)("inlineCode",{parentName:"p"},"console blueprint apply")," command to create the node ID secrets:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Command"',title:'"Command"'},"ash console blueprint apply ./local-node-ids.yml\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Confirmation prompt"',title:'"Confirmation','prompt"':!0},"Blueprint summary\nSecrets\n  5 to create: local-node-id-01, local-node-id-02, local-node-id-03, local-node-id-04, local-node-id-05\n  0 to update:\nProjects\n  0 to create:\n  0 to update:\n? Are you sure you want to apply this blueprint? (y/N)\n[This action is irreversible!]\n")),(0,r.kt)("p",null,"After the blueprint is done applying, we can then confirm that the secrets have been created with the ",(0,r.kt)("inlineCode",{parentName:"p"},"console secret list")," command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Command"',title:'"Command"'},"ash console secret list\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Output"',title:'"Output"'},"+------------------+-------------+----------------+------------------+---------+\n| Secret name      | Secret ID   | Type           | Created at       | Used by |\n+==================+=============+================+==================+=========+\n| local-node-id-01 | 7738...a900 | NodeId         | 2023-12-21T15:53 | 0       |\n+------------------+-------------+----------------+------------------+---------+\n| local-node-id-02 | d577...a0bd | NodeId         | 2023-12-21T15:54 | 0       |\n+------------------+-------------+----------------+------------------+---------+\n| local-node-id-03 | 6cf7...db9d | NodeId         | 2023-12-21T15:54 | 0       |\n+------------------+-------------+----------------+------------------+---------+\n| local-node-id-04 | 7221...fa0c | NodeId         | 2023-12-21T15:54 | 0       |\n+------------------+-------------+----------------+------------------+---------+\n| local-node-id-05 | 36a1...59b8 | NodeId         | 2023-12-21T15:54 | 0       |\n+------------------+-------------+----------------+------------------+---------+\n| my-aws-creds     | 2a29...fde2 | AwsCredentials | 2023-12-21T15:55 | 0       |\n+------------------+-------------+----------------+------------------+---------+\n")))),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"See the ",(0,r.kt)("a",{parentName:"p",href:"/docs/console/reference/secret-management"},"reference")," for more information about secrets lifecycle management.")))}m.isMDXComponent=!0},274:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/ash-console-devnet-nodeid-create-a52119280a3fdac0015d20ef009b2e3d.png"}}]);