"use strict";(self.webpackChunkash_docs=self.webpackChunkash_docs||[]).push([[5218],{9613:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>f});var n=a(9496);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},h="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),h=c(a),d=r,f=h["".concat(s,".").concat(d)]||h[d]||p[d]||l;return a?n.createElement(f,o(o({ref:t},u),{},{components:a})):n.createElement(f,o({ref:t},u))}));function f(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[h]="string"==typeof e?e:r,o[1]=i;for(var c=2;c<l;c++)o[c]=a[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},5498:(e,t,a)=>{a.d(t,{Z:()=>o});var n=a(9496),r=a(5924);const l={tabItem:"tabItem_IfE0"};function o(e){let{children:t,hidden:a,className:o}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(l.tabItem,o),hidden:a},t)}},725:(e,t,a)=>{a.d(t,{Z:()=>g});var n=a(2564),r=a(9496),l=a(5924),o=a(3819),i=a(3442),s=a(1233),c=a(6491),u=a(9182);function h(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:r}}=e;return{value:t,label:a,attributes:n,default:r}}))}function p(e){const{values:t,children:a}=e;return(0,r.useMemo)((()=>{const e=t??h(a);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function d(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:a}=e;const n=(0,i.k6)(),l=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,s._X)(l),(0,r.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(n.location.search);t.set(l,e),n.replace({...n.location,search:t.toString()})}),[l,n])]}function m(e){const{defaultValue:t,queryString:a=!1,groupId:n}=e,l=p(e),[o,i]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!d({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:l}))),[s,c]=f({queryString:a,groupId:n}),[h,m]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,l]=(0,u.Nk)(a);return[n,(0,r.useCallback)((e=>{a&&l.set(e)}),[a,l])]}({groupId:n}),k=(()=>{const e=s??h;return d({value:e,tabValues:l})?e:null})();(0,r.useLayoutEffect)((()=>{k&&i(k)}),[k]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!d({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);i(e),c(e),m(e)}),[c,m,l]),tabValues:l}}var k=a(6363);const X={tabList:"tabList_qavC",tabItem:"tabItem_f8Aq"};function v(e){let{className:t,block:a,selectedValue:i,selectValue:s,tabValues:c}=e;const u=[],{blockElementScrollPositionUntilNextRender:h}=(0,o.o5)(),p=e=>{const t=e.currentTarget,a=u.indexOf(t),n=c[a].value;n!==i&&(h(t),s(n))},d=e=>{let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const a=u.indexOf(e.currentTarget)+1;t=u[a]??u[0];break}case"ArrowLeft":{const a=u.indexOf(e.currentTarget)-1;t=u[a]??u[u.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":a},t)},c.map((e=>{let{value:t,label:a,attributes:o}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>u.push(e),onKeyDown:d,onClick:p},o,{className:(0,l.Z)("tabs__item",X.tabItem,o?.className,{"tabs__item--active":i===t})}),a??t)})))}function w(e){let{lazy:t,children:a,selectedValue:n}=e;const l=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},l.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function b(e){const t=m(e);return r.createElement("div",{className:(0,l.Z)("tabs-container",X.tabList)},r.createElement(v,(0,n.Z)({},e,t)),r.createElement(w,(0,n.Z)({},e,t)))}function g(e){const t=(0,k.Z)();return r.createElement(b,(0,n.Z)({key:String(t)},e))}},5550:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>f,frontMatter:()=>i,metadata:()=>c,toc:()=>h});var n=a(2564),r=(a(9496),a(9613)),l=a(725),o=a(5498);const i={sidebar_position:3},s="Wallet Funding on a Local Test Network",c={unversionedId:"toolkit/ash-cli/tutorials/wallet-funding",id:"toolkit/ash-cli/tutorials/wallet-funding",title:"Wallet Funding on a Local Test Network",description:"The Ash CLI allows to interact with wallets and issue transactions with them on the Primary Network.",source:"@site/docs/toolkit/ash-cli/tutorials/wallet-funding.md",sourceDirName:"toolkit/ash-cli/tutorials",slug:"/toolkit/ash-cli/tutorials/wallet-funding",permalink:"/docs/toolkit/ash-cli/tutorials/wallet-funding",draft:!1,editUrl:"https://github.com/AshAvalanche/ash-docs/tree/main/docs/toolkit/ash-cli/tutorials/wallet-funding.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"toolkitSidebar",previous:{title:"Custom Configuration",permalink:"/docs/toolkit/ash-cli/tutorials/custom-configuration"}},u={},h=[{value:"Create the local network configuration",id:"create-the-local-network-configuration",level:2},{value:"Create a new wallet",id:"create-a-new-wallet",level:2},{value:"Store and reuse the private key",id:"store-and-reuse-the-private-key",level:2},{value:"Show information about the wallet",id:"show-information-about-the-wallet",level:2},{value:"Transfer AVAX to the wallet from the pre-funded account",id:"transfer-avax-to-the-wallet-from-the-pre-funded-account",level:2},{value:"Check the wallet balance before the transfer",id:"check-the-wallet-balance-before-the-transfer",level:3},{value:"Transfer AVAX to the wallet",id:"transfer-avax-to-the-wallet",level:3},{value:"Check the wallet balance after the transfer",id:"check-the-wallet-balance-after-the-transfer",level:3}],p={toc:h},d="wrapper";function f(e){let{components:t,...a}=e;return(0,r.kt)(d,(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"wallet-funding-on-a-local-test-network"},"Wallet Funding on a Local Test Network"),(0,r.kt)("p",null,"The Ash CLI allows to interact with wallets and issue transactions with them on the ",(0,r.kt)("a",{parentName:"p",href:"https://docs.avax.network/learn/avalanche/avalanche-platform"},"Primary Network"),"."),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"The Ash CLI uses ",(0,r.kt)("strong",{parentName:"p"},"plain-text private keys")," to interact with wallets. ",(0,r.kt)("strong",{parentName:"p"},"It should never be used on the mainnet"),". If you try do so, your command will fail with: ",(0,r.kt)("inlineCode",{parentName:"p"},"AvalancheNetwork error: wallet creation is not allowed on network 'mainnet'"),"."),(0,r.kt)("p",{parentName:"admonition"},"To interact with wallets on the mainnet, e.g. to create Subnets and blockchains, you should use the ",(0,r.kt)("a",{parentName:"p",href:"https://docs.avax.network/subnets/create-a-mainnet-subnet"},"Avalanche CLI")," that is compatible with Ledger devices.")),(0,r.kt)("br",null),(0,r.kt)("p",null,"In this tutorial, we will see how to ",(0,r.kt)("strong",{parentName:"p"},"create and fund a new wallet")," on a local Avalanche test network (see ",(0,r.kt)("a",{parentName:"p",href:"/docs/toolkit/ansible-avalanche-collection/tutorials/local-test-network"},"Local Test Network Creation")," for more information on how to deploy such an environment)."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"See ",(0,r.kt)("a",{parentName:"p",href:"/docs/toolkit/ash-cli/installation"},"Installation")," for installation instructions on your platform.")),(0,r.kt)("h2",{id:"create-the-local-network-configuration"},"Create the local network configuration"),(0,r.kt)("p",null,"Create the file ",(0,r.kt)("inlineCode",{parentName:"p"},"~/.config/ash/local-test-network.yml")," with the following content (see ",(0,r.kt)("a",{parentName:"p",href:"/docs/toolkit/ash-cli/tutorials/custom-configuration"},"Custom Configuration")," for more information):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="~/.config/ash/local-test-network.yml"',title:'"~/.config/ash/local-test-network.yml"'},"avalancheNetworks:\n  - name: local\n    subnets:\n      - id: 11111111111111111111111111111111LpoYY\n        subnetType: PrimaryNetwork\n        blockchains:\n          - id: 11111111111111111111111111111111LpoYY\n            name: P-Chain\n            vmId: 11111111111111111111111111111111LpoYY\n            vmType: PVM\n            rpcUrl: http://192.168.60.11:9650/ext/bc/P\n          - id: 2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM\n            name: X-Chain\n            vmId: jvYyfQTxGMJLuGWa55kdP2p2zSUYsQ5Raupu4TW34ZAUBAbtq\n            vmType: AVM\n            rpcUrl: http://192.168.60.11:9650/ext/bc/X\n")),(0,r.kt)("p",null,"Then set the ",(0,r.kt)("inlineCode",{parentName:"p"},"ASH_CONFIG")," and the ",(0,r.kt)("inlineCode",{parentName:"p"},"AVALANCHE_NETWORK")," environment variables to use this configuration:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"export ASH_CONFIG=~/.config/ash/local-test-network.yml\nexport AVALANCHE_NETWORK=local\n")),(0,r.kt)("h2",{id:"create-a-new-wallet"},"Create a new wallet"),(0,r.kt)("p",null,"Creating a wallet is actually ",(0,r.kt)("strong",{parentName:"p"},"generating a new private key"),". We can do it with the ",(0,r.kt)("inlineCode",{parentName:"p"},"wallet generate")," command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"ash avalanche wallet generate\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"Private key (CB58): PrivateKey-XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\nPrivate key (hex):  0xXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Store your private key in a safe place!")," You will need it to sign transactions."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Wallets generated with the Ash CLI only give access to one account (one address per blockchain).")),(0,r.kt)("h2",{id:"store-and-reuse-the-private-key"},"Store and reuse the private key"),(0,r.kt)("p",null,"An acceptable solution ",(0,r.kt)("strong",{parentName:"p"},"for test environments")," is to generate a JSON file with the ",(0,r.kt)("inlineCode",{parentName:"p"},"wallet generate --json")," command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# Generate a JSON file with the private key\nash avalanche wallet generate --json > ~/.config/ash/test-wallet.json\n# Secure the file so that only you can read it\nchmod 600 ~/.config/ash/test-wallet.json\n")),(0,r.kt)("p",null,"You can then easily retrieve the private key with ",(0,r.kt)("a",{parentName:"p",href:"https://stedolan.github.io/jq/"},"jq")," and leverage the ",(0,r.kt)("inlineCode",{parentName:"p"},"AVALANCHE_PRIVATE_KEY")," environment variable:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"export AVALANCHE_PRIVATE_KEY=$(jq -r '.cb58' ~/.config/ash/test-wallet.json)\n")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Using the ",(0,r.kt)("inlineCode",{parentName:"p"},"AVALANCHE_PRIVATE_KEY")," environment variable is the safest way to interact with wallets (as long as you keep the private key out of your shell history!).")),(0,r.kt)("h2",{id:"show-information-about-the-wallet"},"Show information about the wallet"),(0,r.kt)("p",null,"You can get the list of the wallet's addresses with the ",(0,r.kt)("inlineCode",{parentName:"p"},"wallet info")," command:"),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"env var",label:"Using AVALANCHE_PRIVATE_KEY",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"ash avalanche wallet info\n"))),(0,r.kt)(o.Z,{value:"argument",label:"Passing the private key as argument (unsafe)",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"ash avalanche wallet info 0xXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX -e hex\n")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"Wallet information:\n  X-Chain address: X-local1aszv6y7ugcnhgfvd7lzv8v3fk9hytlpstcazfk\n  P-Chain address: P-local1aszv6y7ugcnhgfvd7lzv8v3fk9hytlpstcazfk\n  EVM address:     0xE8eeF4A23106f11DFf676a41Eb1A58E585546aca\n")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"The addresses will be different for you as the private key is randomly generated.")),(0,r.kt)("h2",{id:"transfer-avax-to-the-wallet-from-the-pre-funded-account"},"Transfer AVAX to the wallet from the pre-funded account"),(0,r.kt)("p",null,"Now that we have a wallet and its address on the X-Chain, we can ",(0,r.kt)("strong",{parentName:"p"},"transfer some AVAX to it"),". Fortunately, a pre-funded account is available on local Avalanche networks (see ",(0,r.kt)("a",{parentName:"p",href:"/docs/toolkit/ansible-avalanche-collection/tutorials/local-test-network#pre-funded-account"},"Pre-funded account")," for more information) with plenty of AVAX."),(0,r.kt)("h3",{id:"check-the-wallet-balance-before-the-transfer"},"Check the wallet balance before the transfer"),(0,r.kt)("p",null,"Let's use the ",(0,r.kt)("inlineCode",{parentName:"p"},"x balance")," command to check the wallet's balance on our local network:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"ash avalanche x balance X-local1aszv6y7ugcnhgfvd7lzv8v3fk9hytlpstcazfk\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"Balance of 'X-local1aszv6y7ugcnhgfvd7lzv8v3fk9hytlpstcazfk' on X-Chain (asset 'AVAX'):  0\n")),(0,r.kt)("h3",{id:"transfer-avax-to-the-wallet"},"Transfer AVAX to the wallet"),(0,r.kt)("p",null,"Let's use the ",(0,r.kt)("inlineCode",{parentName:"p"},"x transfer")," command to transfer 133.7 AVAX to our new wallet (from the pre-funded account):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"ash avalanche x transfer 133.7 X-local1aszv6y7ugcnhgfvd7lzv8v3fk9hytlpstcazfk \\\n  -p PrivateKey-ewoqjP7PxY4yr3iLTpLisriqt94hdyDFNgchSxGGztUrTXtNN -w\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"Waiting for transaction to be accepted...\nTransfered 133.7 of asset 'AVAX' to 'X-local1aszv6y7ugcnhgfvd7lzv8v3fk9hytlpstcazfk'!\nTransaction ID: BoLhWiiwfA7b2rq7WUyNTQrZ54nRqCYVSLt6oYWKc2AX5Lmpu\n")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"We used the ",(0,r.kt)("inlineCode",{parentName:"p"},"-w")," flag to wait for the transaction to be accepted.")),(0,r.kt)("h3",{id:"check-the-wallet-balance-after-the-transfer"},"Check the wallet balance after the transfer"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"ash avalanche x balance X-local1aszv6y7ugcnhgfvd7lzv8v3fk9hytlpstcazfk\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"Balance of 'X-local1aszv6y7ugcnhgfvd7lzv8v3fk9hytlpstcazfk' on X-Chain (asset 'AVAX'):  133.7\n")),(0,r.kt)("p",null,"Great! We can now use this wallet to interact with the X-Chain and other blockchains on the network."))}f.isMDXComponent=!0}}]);