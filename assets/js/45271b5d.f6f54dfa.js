"use strict";(self.webpackChunkash_docs=self.webpackChunkash_docs||[]).push([[882],{9613:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>h});var a=t(9496);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=a.createContext({}),c=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=c(e.components);return a.createElement(s.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(t),m=o,h=p["".concat(s,".").concat(m)]||p[m]||d[m]||r;return t?a.createElement(h,i(i({ref:n},u),{},{components:t})):a.createElement(h,i({ref:n},u))}));function h(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,i=new Array(r);i[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[p]="string"==typeof e?e:o,i[1]=l;for(var c=2;c<r;c++)i[c]=t[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},2477:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var a=t(7605),o=(t(9496),t(9613));const r={sidebar_position:7},i="5. Subnet Creation",l={unversionedId:"console/guides/local-network/subnet",id:"console/guides/local-network/subnet",title:"5. Subnet Creation",description:"The Ash Console is currently in alpha and not production-ready. It is under active development and subject to breaking changes.",source:"@site/docs/console/guides/local-network/subnet.md",sourceDirName:"console/guides/local-network",slug:"/console/guides/local-network/subnet",permalink:"/docs/console/guides/local-network/subnet",draft:!1,editUrl:"https://github.com/AshAvalanche/ash-docs/tree/main/docs/console/guides/local-network/subnet.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"consoleSidebar",previous:{title:"4. Avalanche Nodes Deployment",permalink:"/docs/console/guides/local-network/avalanche-nodes"},next:{title:"6. Teardown",permalink:"/docs/console/guides/local-network/teardown"}},s={},c=[{value:"Control key creation",id:"control-key-creation",level:2},{value:"Subnet creation",id:"subnet-creation",level:2},{value:"Subnet information",id:"subnet-information",level:2},{value:"Blockchain RPC endpoint",id:"blockchain-rpc-endpoint",level:2}],u={toc:c},p="wrapper";function d(e){let{components:n,...t}=e;return(0,o.kt)(p,(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"5-subnet-creation"},"5. Subnet Creation"),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"The Ash Console is currently in alpha and ",(0,o.kt)("strong",{parentName:"p"},"not production-ready"),". It is under active development and subject to breaking changes.")),(0,o.kt)("p",null,"In this section, we will create a Subnet ",(0,o.kt)("a",{parentName:"p",href:"/docs/console/glossary#resource"},"resource")," on our local network."),(0,o.kt)("h2",{id:"control-key-creation"},"Control key creation"),(0,o.kt)("p",null,"Before creating a Subnet, we need to create a ",(0,o.kt)("inlineCode",{parentName:"p"},"wallet")," ",(0,o.kt)("a",{parentName:"p",href:"/docs/console/glossary#secret"},"secret"),". This wallet will be use to sign the ",(0,o.kt)("strong",{parentName:"p"},"Subnet transactions")," (creation, validator management, etc.) and the P-Chain address will be used as the ",(0,o.kt)("strong",{parentName:"p"},"control key")," of the Subnet."),(0,o.kt)("p",null,"To make things easier, we will use the ",(0,o.kt)("inlineCode",{parentName:"p"},"ewoq")," address which is pre-funded on the local network."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Command"',title:'"Command"'},"ash console secret create '{\n  name: ewoq-key,\n  secretType: wallet,\n  pChainAddress: P-fuji18jma8ppw3nhx5r4ap8clazz0dps7rv5u6wmu4t,\n  privateKey: PrivateKey-ewoqjP7PxY4yr3iLTpLisriqt94hdyDFNgchSxGGztUrTXtNN,\n  privateKeyFormat: cb58\n}'\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Output"',title:'"Output"'},"Secret created successfully!\n+-------------+-------------+--------+------------------+---------+\n| Secret name | Secret ID   | Type   | Created at       | Used by |\n+=============+=============+========+==================+=========+\n| ewoq-key    | 657b...949e | Wallet | 2024-01-30T13:40 | 0       |\n+-------------+-------------+--------+------------------+---------+\n")),(0,o.kt)("admonition",{type:"warning"},(0,o.kt)("p",{parentName:"admonition"},"Do not use this wallet as control key in production!")),(0,o.kt)("h2",{id:"subnet-creation"},"Subnet creation"),(0,o.kt)("p",null,"The following command will create a ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/ava-labs/subnet-evm"},"Subnet EVM")," blockchain with a standard ",(0,o.kt)("a",{parentName:"p",href:"https://docs.avax.network/build/subnet/upgrade/customize-a-subnet#genesis"},"genesis")," configuration."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Command"',title:'"Command"'},'ash console resource create \'{\n  name: ash-subnet,\n  resourceType: avalancheSubnet,\n  cloudRegionId: aws/us-east-1,\n  subnetControlKeySecretId: ewoq-key,\n  subnetNodesResourceIds: [\n    local-node-01,\n    local-node-02,\n    local-node-03,\n    local-node-04,\n    local-node-05,\n  ],\n  subnetConfig: {\n    avalancheSubnetConfig: {\n      subnet_blockchains_list: [\n          {\n            name: AshLocalEVM,\n            vm: subnet-evm,\n            genesis_data: {\n              "config": {\n                "chainId": 66666,\n                "homesteadBlock": 0,\n                "eip150Block": 0,\n                "eip150Hash": "0x2086799aeebeae135c246c65021c82b4e15a2c451340993aacfd2751886514f0",\n                "eip155Block": 0,\n                "eip158Block": 0,\n                "byzantiumBlock": 0,\n                "constantinopleBlock": 0,\n                "petersburgBlock": 0,\n                "istanbulBlock": 0,\n                "muirGlacierBlock": 0,\n                "subnetEVMTimestamp": 0,\n                "feeConfig": {\n                  "gasLimit": 8000000,\n                  "minBaseFee": 25000000000,\n                  "targetGas": 15000000,\n                  "baseFeeChangeDenominator": 36,\n                  "minBlockGasCost": 0,\n                  "maxBlockGasCost": 1000000,\n                  "targetBlockRate": 2,\n                  "blockGasCostStep": 200000\n                }\n              },\n              "alloc": {\n                "8db97C7cEcE249c2b98bDC0226Cc4C2A57BF52FC": {\n                  "balance": "0x295BE96E64066972000000"\n                }\n              },\n              "nonce": "0x0",\n              "timestamp": "0x0",\n              "extraData": "0x00",\n              "gasLimit": "0x7A1200",\n              "difficulty": "0x0",\n              "mixHash": "0x0000000000000000000000000000000000000000000000000000000000000000",\n              "coinbase": "0x0000000000000000000000000000000000000000",\n              "number": "0x0",\n              "gasUsed": "0x0",\n              "parentHash": "0x0000000000000000000000000000000000000000000000000000000000000000"\n          }\n        }\n      ]\n    }\n  },\n}\'\n')),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"The ",(0,o.kt)("inlineCode",{parentName:"p"},"avalancheSubnetConfig")," field is following the same structure as the ",(0,o.kt)("a",{parentName:"p",href:"/docs/toolkit/ansible-avalanche-collection/introduction"},"Ansible Avalanche Collection"),"'s ",(0,o.kt)("inlineCode",{parentName:"p"},"ash.avalanche_subnet")," role. See ",(0,o.kt)("a",{parentName:"p",href:"/docs/toolkit/ansible-avalanche-collection/reference/roles/avalanche-subnet#blockchain-configuration"},"Blockchain configuration")," for more information on how to generate a custom genesis configuration.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Output"',title:'"Output"'},"Resource successfully created in project 'ash-devnet'!\n+---------------+-------------+-----------------+---------------+-------+------------------+---------+-------------------+\n| Resource name | Resource ID | Type            | Cloud region  | Size  | Created at       | Status  | Resource specific |\n+===============+=============+=================+===============+=======+==================+=========+===================+\n| ash-subnet    | 542c...f94e | AvalancheSubnet | aws/us-east-1 | Small | 2024-01-30T13:58 | Pending |  ID         |     |\n|               |             |                 |               |       |                  |         |  Validators | 0   |\n+---------------+-------------+-----------------+---------------+-------+------------------+---------+-------------------+\n")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Unlike the ",(0,o.kt)("inlineCode",{parentName:"p"},"avalancheNode")," resource, there is no concept of ",(0,o.kt)("inlineCode",{parentName:"p"},"size")," for the ",(0,o.kt)("inlineCode",{parentName:"p"},"avalancheSubnet")," resource. The Ash Console will create a small instance (e.g.: ",(0,o.kt)("inlineCode",{parentName:"p"},"t2.micro"),") that will serve as the Subnet control plane.")),(0,o.kt)("h2",{id:"subnet-information"},"Subnet information"),(0,o.kt)("p",null,"After a few minutes, we can get the Subnet ID, control keys, blockchains, and validator nodes information from the ",(0,o.kt)("inlineCode",{parentName:"p"},"subnetStatus")," field returned by the ",(0,o.kt)("inlineCode",{parentName:"p"},"console resource info")," command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Command"',title:'"Command"'},"ash console resource info ash-subnet --json | jq '.subnetStatus'\n")),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"We use the ",(0,o.kt)("inlineCode",{parentName:"p"},"--json")," flag to get the extended information about the Subnet. All those information cannot be displayed in a table format.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="Output"',title:'"Output"'},'{\n  "blockchains": [\n    {\n      "id": "RfX8YRUHePxFENBZFwaNt1tP6CR6RQ4hJJ5AqYv49LRoSKniK",\n      "name": "AshLocalEVM",\n      "vm_id": "srEXiWaHuhNyGwPUi444Tu47ZEDwxTWrbQiuD7FmgSAQ6X7Dy",\n      "vm_type": "SubnetEVM"\n    }\n  ],\n  "controlKeys": [\n    "P-local18jma8ppw3nhx5r4ap8clazz0dps7rv5u00z96u"\n  ],\n  "id": "29uVeLPJB1eQJkzRemU8g8wZDw5uJRqpab5U2mX9euieVwiEbL",\n  "pendingValidators": [],\n  "subnetType": "Permissioned",\n  "threshold": 1,\n  "validators": [\n    {\n      "connected": true,\n      "end_time": 1707486609,\n      "node_id": "NodeID-MFrZFVCXPv5iCn6M9K6XduxGTYp891xXZ",\n      "stake_amount": 100,\n      "start_time": 1706881809,\n      "tx_id": "DhEgYijBur6QDUDgUMpmDAyF5XGyq6JwG919B8bkryDLijvua",\n      "uptime": 100,\n      "weight": 100\n    },\n    # ...\n  ]\n}\n')),(0,o.kt)("h2",{id:"blockchain-rpc-endpoint"},"Blockchain RPC endpoint"),(0,o.kt)("p",null,"The CLI provides a powerful helper to get the RPC endpoint that can be used to query the Subnet EVM blockchain (e.g. to connect a Web3 wallet). Provide the ",(0,o.kt)("inlineCode",{parentName:"p"},"avalancheNode")," resource name to be used as RPC and the ",(0,o.kt)("inlineCode",{parentName:"p"},"avalancheSubnet")," resource name:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Command"',title:'"Command"'},"ash console helper rpc local-node-01 ash-subnet\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Output"',title:'"Output"'},"AshLocalEVM RCP endpoint:\n  http://44.223.28.33:9650/ext/bc/RfX8YRUHePxFENBZFwaNt1tP6CR6RQ4hJJ5AqYv49LRoSKniK/rpc\n")),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"See the ",(0,o.kt)("a",{parentName:"p",href:"/docs/console/reference/resource-management"},"reference")," for more information about resources lifecycle management.")))}d.isMDXComponent=!0}}]);